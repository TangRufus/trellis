---
- name: Check for composer.json in project root or project_subtree_path
  stat:
    path: "{{ deploy_helper.new_release_path }}/composer.json"
  register: composer_json

- name: Fail if composer.json not found
  fail:
    msg: "Unable to find a `composer.json` file in the root of '{{ deploy_helper.new_release_path }}'. Make sure your repo has a `composer.json` file in its root or edit `repo_subtree_path` for '{{ site }}' in `wordpress_sites.yml` so it points to the directory with a `composer.json` file."
  when: not composer_json.stat.exists

- name: Setup packagist.com authentication
  composer:
    command: config
    arguments: --auth http-basic.repo.packagist.com token {{ project.packagist_token }}
    working_dir: "{{ deploy_helper.new_release_path }}"
  no_log: true
  when: project.packagist_token is defined

- name: Install Composer dependencies
  composer:
    no_scripts: yes
    working_dir: "{{ deploy_helper.new_release_path }}"

- name: Find static assets
  find:
    paths: "{{ project.static_asset_paths | default(static_asset_paths) | map('regex_replace', '(.*)', deploy_helper.new_release_path + '/web/\\1') | list }}"
    patterns: "*.{{ project.static_asset_extensions | default(static_asset_extensions) | join(',*.') }}"
    recurse: yes
  when: project.gzip_assets_on_deploy | default(gzip_assets_on_deploy)
  register: static_assets_raw

- name: Set fact -- Static assets
  set_fact:
    static_assets: "{{ static_assets_raw.files | default([]) }}"

- name: Gzip static assets
  shell: "gzip --best --keep --force {{ static_assets | map(attribute='path') | map('quote') | join(' ') }}"
  when: ( project.gzip_assets_on_deploy | default(gzip_assets_on_deploy) ) and ( static_assets | count )
