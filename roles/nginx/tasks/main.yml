---
- name: Add Nginx PPA
  shell: "add-apt-repository --enable-source {{ nginx_ppa }}"

- name: Install Nginx
  apt:
    name: "{{ nginx_package }}"
    state: present
    force: yes
    update_cache: yes
  register: nginx

- name: Grab dynamic module sources
  git:
    repo: "{{ item.value.repo }}"
    dest: "/opt/{{ item.key }}"
    depth: 1
  with_dict: "{{ nginx_dynamic_modules }}"
  register: nginx_dynamic_module_sources
  tags: nginx-dynamic-modules

- include: dynamic-modules.yml
  notify: reload nginx
  when: nginx_dynamic_modules and (nginx_dynamic_module_sources.changed or nginx.changed)
  tags: nginx-dynamic-modules

- name: Create SSL directory
  file:
    mode: 0700
    path: "{{ nginx_path }}/ssl"
    state: directory

- name: Generate strong unique Diffie-Hellman group.
  command: openssl dhparam -out dhparams.pem 2048
  args:
    chdir: "{{ nginx_path }}/ssl"
    creates: "{{ nginx_path }}/ssl/dhparams.pem"
  when: wordpress_sites.values() | map(attribute='ssl') | selectattr('enabled') | list | count
  notify: reload nginx
  tags: [diffie-hellman]

- name: Grab h5bp/server-configs-nginx
  git:
    repo: "https://github.com/h5bp/server-configs-nginx.git"
    dest: "{{ nginx_path }}/h5bp-server-configs"
    version: 82181a672a7c26f9bc8744fead80318d8a2520b1
    force: yes

- name: Move h5bp configs
  command: cp -R {{ nginx_path }}/h5bp-server-configs/h5bp {{ nginx_path }}/h5bp
  args:
    creates: "{{ nginx_path }}/h5bp/"

- name: Create nginx.conf
  template:
    src: "{{ nginx_conf }}"
    dest: "{{ nginx_path }}/nginx.conf"
  notify: reload nginx
  tags: nginx-includes

- name: Disable default server
  file:
    path: "{{ nginx_path }}/sites-enabled/default"
    state: absent
  notify: reload nginx

- name: Create Nginx available sites
  template:
    src: "{{ item.src }}"
    dest: "{{ nginx_path }}/sites-available/{{ item.src | basename | regex_replace('.j2$', '') }}"
  with_items: "{{ nginx_sites_confs }}"
  when: item.enabled | default(true)
  tags: nginx-sites

- name: Enable or disable Nginx sites
  file:
    path: "{{ nginx_path }}/sites-enabled/{{ item.src | basename | regex_replace('.j2$', '') }}"
    src: "{{ nginx_path }}/sites-available/{{ item.src | basename | regex_replace('.j2$', '') }}"
    state: "{{ item.enabled | default(true) | ternary('link', 'absent') }}"
    force: yes
  with_items: "{{ nginx_sites_confs }}"
  notify: reload nginx
  tags: nginx-sites
